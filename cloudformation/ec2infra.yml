Resources:
  # VPC and related resources
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: 'MyVPC'

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
  
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  DefaultSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Default VPC Security Group'
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: 'DefaultVPCSecurityGroup'

  PublicSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: '10.0.1.0/24'
      VpcId: !Ref MyVPC
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: 'PublicSubnetA'
          
  PublicSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: '10.0.2.0/24'
      VpcId: !Ref MyVPC
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: 'PublicSubnetB'

  MyRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: 'PublicRouteTable'

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PublicSubnetARouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref MyRouteTable

  PublicSubnetBRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref MyRouteTable

  MyEIP:
    Type: 'AWS::EC2::EIP'

  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt MyEIP.AllocationId
      SubnetId: !Ref PublicSubnetA

  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: 'PrivateRouteTable'

  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGateway

  NetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref MyVPC

  NetworkAclEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: '100'
      Protocol: '6'  # TCP
      RuleAction: 'allow'
      Egress: 'false'
      CidrBlock: '0.0.0.0/0'
      PortRange:
        From: '80'
        To: '80'

  # Database and related resources
  MyDBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'MySQL Ports for specific IP'
      VpcId: !Ref MyVPC

  MyRDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'RDS MySQL Security Group'
      VpcId: !Ref MyVPC

  MyDBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: '150'
      DBInstanceClass: 'db.m5.large'
      Engine: 'mysql'
      EngineVersion: '5.7'
      MasterUsername: !Ref DbUsername
      MasterUserPassword: !Ref DbPassword
      VPCSecurityGroups:
        - !Ref MyDBSecurityGroup
  
  # ECR Repository
  MyECRRepository:
    Type: 'AWS::ECR::Repository'
    Properties:
      RepositoryName: 'test_images'
      ImageTagMutability: 'MUTABLE'
  
  # Log Group
  MyLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/ecs/${EcsServiceName}'

Parameters:
  DbUsername:
    Description: Database User Name
    Type: String

  DbPassword:
    Description: Database Password
    NoEcho: True # Conceal this parameter in outputs
    Type: String

  VPCId:
    Description: VPC Id
    Type: AWS::EC2::VPC::Id

  EcsServiceName:
    Description: ECS Service Name
    Type: String

Outputs:
  RepositoryUrl:
    Value: !GetAtt [MyECRRepository, RepositoryUri]
    Description: URL of the ECR repository

  DBEndpoint:
    Value: !GetAtt [MyDBInstance, Endpoint.Address]
    Description: Endpoint for the RDS instance